package com.mastersamurai.main;

import java.util.HashMap;

import org.bukkit.Bukkit;
import org.bukkit.command.Command;
import org.bukkit.command.CommandExecutor;
import org.bukkit.command.CommandSender;
import org.bukkit.entity.Player;
import org.bukkit.inventory.ItemStack;

import com.mastersamurai.common.colorRef;

public class commands extends colorRef implements CommandExecutor{
	public static boolean isInteger(String s) {
	    try { 
	        Integer.parseInt(s); 
	    } catch(NumberFormatException e) { 
	        return false; 
	    } catch(NullPointerException e) {
	        return false;
	    }
	    // only got here if we didn't return false
	    return true;
	}
	public boolean onCommand(CommandSender sender, Command cmd, String label,String[] args) {
		Player pl = (Player) sender;
		if(cmd.getName().equalsIgnoreCase("giveme")){
			if(args.length == 0){
			 pl.sendMessage(ac + "Usage: /giveme [item] [amount]");
			}else{
			  if(args[0].toLowerCase() == "bloodvial" && isInteger(args[1]) == true){
				  int amount = Integer.parseInt(args[1]);
				  for(int i = amount; i > 0; i--){
					  pl.getInventory().addItem(com.mastersamurai.bloodvial.bloodVialItem.bloodVial(1));
				  }
			  }else{
              if(args[0].toLowerCase() == "fireball" && isInteger(args[1]) == true){
            	  int amount = Integer.parseInt(args[1]);
				  for(int i = amount; i > 0; i--){
					  pl.getInventory().addItem(com.mastersamurai.fireball.fireBallItem.fireBall(1));
				  }
			  }else{
              if(args[0].toLowerCase() == "frostbite" && isInteger(args[1]) == true){
            	  int amount = Integer.parseInt(args[1]);
				  for(int i = amount; i > 0; i--){
					  pl.getInventory().addItem(com.mastersamurai.frostbite.frostBiteItem.frostBite(1));
				  }
              }else{
              if(args[0].toLowerCase() == "dagger" && isInteger(args[1]) == true){
            	  int amount = Integer.parseInt(args[1]);
				  for(int i = amount; i > 0; i--){
					  pl.getInventory().addItem(com.mastersamurai.sacrificialdagger.sacrificialDaggerItem.sacrificialDagger(1));
				  }
              }else{
              if(args[0].toLowerCase() == "vial" && isInteger(args[1]) == true){
            	  int amount = Integer.parseInt(args[1]);
				  for(int i = amount; i > 0; i--){
					  pl.getInventory().addItem(com.mastersamurai.vial.vialItem.vial(1));
				  }
              }else{
              if(args[0].toLowerCase() == "soulshard" && isInteger(args[1]) == true){
            	  int amount = Integer.parseInt(args[1]);
				  for(int i = amount; i > 0; i--){
					  pl.getInventory().addItem(com.mastersamurai.soulshard.soulShardItem.soulShard(1));
				  }
              }else{ 
              if(args[0].toLowerCase() == "soulcrystal" && isInteger(args[1]) == true){
            	  int amount = Integer.parseInt(args[1]);
				  for(int i = amount; i > 0; i--){
					  pl.getInventory().addItem(com.mastersamurai.soulcrystal.soulCrystalItem.soulCrystal(1));
				  }
			  }
              }
			}
		}
              }
			  }
			  }
			}
		}
		return false;
	}
}
              
	